# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

analyzer:
  strong-mode:
    implicit-casts: true
    implicit-dynamic: true
  errors:
    # treat missing required parameters as a warning (not a hint)
    # missing_required_param: warning
    unnecessary_new: warning
    # treat missing returns as a warning (not a hint)
    # missing_return: warning
    # allow having TODO comments in the code
    todo: ignore
    require_trailing_commas: error
    deprecated_member_use_from_same_package: ignore
    # TODO(ianh): https://github.com/flutter/flutter/issues/74381
    # Clean up existing unnecessary imports, and remove line to ignore.
    unnecessary_import: ignore
    sort_constructors_first: error


linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    avoid_print: true  # Uncomment to disable the `avoid_print` rule
    prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
    await_only_futures: true
    # Style rules
    camel_case_types: true
    library_names: true
    file_names: true
    library_prefixes: true
    non_constant_identifier_names: true
    constant_identifier_names: true
    directives_ordering: true
    # lines_longer_than_80_chars: true
    curly_braces_in_flow_control_structures: true
    slash_for_doc_comments: true
    # Usage rules
    prefer_interpolation_to_compose_strings: true
    prefer_collection_literals: true
    avoid_function_literals_in_foreach_calls: true
    avoid_init_to_null: true
    prefer_expression_function_bodies: false
    prefer_initializing_formals: true
    type_init_formals: true
    empty_constructor_bodies: true
    empty_statements: true
    unnecessary_new: true
    unnecessary_this: true
    unnecessary_const: true
    unnecessary_overrides: true
    unnecessary_parenthesis: true
    unnecessary_lambdas: true
    unnecessary_getters_setters: true
    # Design: true rules
    avoid_setters_without_getters: true
    avoid_returning_null: true
    avoid_return_types_on_setters: true
    require_trailing_commas: true
    sort_constructors_first: true